declare const supportedLanguageList: {
    readonly en: 48;
    readonly ar: 1632;
    readonly fa: 1776;
    readonly nko: 1984;
    readonly hi: 2406;
    readonly bn: 2534;
    readonly pa: 2662;
    readonly gu: 2790;
    readonly or: 2918;
    readonly ta: 3046;
    readonly te: 3174;
    readonly kn: 3302;
    readonly mal: 3430;
    readonly sinhala_lith: 3558;
    readonly thai: 3664;
    readonly lao: 3792;
    readonly tibetan: 3872;
    readonly myanmar: 4160;
    readonly myanmar_shan: 4240;
    readonly khmer: 6112;
    readonly mongolian: 6160;
    readonly limbu: 6470;
    readonly new_tai_lue: 6608;
    readonly tai_tham_hora: 6784;
    readonly tai_tham_tham: 6800;
    readonly balinese: 6992;
    readonly sundanese: 7088;
    readonly lepcha: 7232;
    readonly ol_chiki: 7248;
    readonly vai: 42528;
    readonly saurashtra: 43216;
    readonly kayah_li: 43264;
    readonly javanese: 43472;
    readonly myanmar_tai_laing: 43504;
    readonly cham: 43600;
    readonly meetei_mayek: 44016;
    readonly fullwidth: 65296;
    readonly osmanya: 66720;
    readonly brahmi: 69734;
    readonly sora_sompeng: 69872;
    readonly chakma: 69942;
    readonly sharada: 70096;
    readonly khudawadi: 70384;
    readonly newa: 70736;
    readonly tirhuta: 70864;
    readonly modi: 71248;
    readonly takri: 71360;
    readonly ahom: 71472;
    readonly warang_citi: 71904;
    readonly bhaiksuki: 72784;
    readonly mro: 92768;
    readonly pahawh_hmong: 93008;
    readonly mathematical_bold: 120782;
    readonly 'mathematical_double-struck': 120792;
    readonly 'mathematical_sans-serif': 120802;
    readonly 'mathematical_sans-serif_bold': 120812;
    readonly mathematical_monospace: 120822;
    readonly fula: 125264;
};
export type UnicodeLangKeys = keyof typeof supportedLanguageList;
export declare class UnicodeDigits {
    protected _toLangZeroCode: 48 | 1632 | 1776 | 1984 | 2406 | 2534 | 2662 | 2790 | 2918 | 3046 | 3174 | 3302 | 3430 | 3558 | 3664 | 3792 | 3872 | 4160 | 4240 | 6112 | 6160 | 6470 | 6608 | 6784 | 6800 | 6992 | 7088 | 7232 | 7248 | 42528 | 43216 | 43264 | 43472 | 43504 | 43600 | 44016 | 65296 | 66720 | 69734 | 69872 | 69942 | 70096 | 70384 | 70736 | 70864 | 71248 | 71360 | 71472 | 71904 | 72784 | 92768 | 93008 | 120782 | 120792 | 120802 | 120812 | 120822 | 125264;
    protected _searchRegExt: RegExp;
    protected _replacer(_: string, ...args: number[]): string;
    /**
     * Translate number.
     *
     * Example:
     *
     * ```ts
     * const unicodeDigits = new UnicodeDigits('common', 'en');
     *
     * const list = [
     *   '0123456789',
     *   '٠١٢٣٤٥٦٧٨٩',
     *   '߀߁߂߃߄߅߆߇߈߉',
     *   '०१२३४५६७८९',
     *   '০১২৩৪৫৬৭৮৯',
     *   '੦੧੨੩੪੫੬੭੮੯',
     *   '૦૧૨૩૪૫૬૭૮૯',
     *   '୦୧୨୩୪୫୬୭୮୯',
     *   '௦௧௨௩௪௫௬௭௮௯',
     * ].join('\n');
     *
     * console.log(unicodeDigits.translate(list));
     * ```
     */
    constructor(toLanguage: UnicodeLangKeys, fromLanguages?: UnicodeLangKeys[] | 'all');
    /**
     * Convert the String of number of the source language to the destination language.
     *
     * @param {string} str - String of number of the source language.
     * @returns String of number of the destination language.
     *
     * Example:
     *
     * ```ts
     * const list = [
     *   '0123456789',
     *   '٠١٢٣٤٥٦٧٨٩',
     *   '߀߁߂߃߄߅߆߇߈߉',
     *   '०१२३४५६७८९',
     *   '০১২৩৪৫৬৭৮৯',
     *   '੦੧੨੩੪੫੬੭੮੯',
     *   '૦૧૨૩૪૫૬૭૮૯',
     *   '୦୧୨୩୪୫୬୭୮୯',
     *   '௦௧௨௩௪௫௬௭௮௯',
     * ].join('\n');
     *
     * console.log(unicodeDigits.translate(list));
     * ```
     */
    translate(str: string): string;
}
export {};
//# sourceMappingURL=unicode-digits.d.ts.map