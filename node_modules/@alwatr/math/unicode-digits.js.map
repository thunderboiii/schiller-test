{"version":3,"file":"unicode-digits.js","sourceRoot":"","sources":["src/unicode-digits.ts"],"names":[],"mappings":"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","sourcesContent":["const supportedLanguageList = {\n  en: 0x0030,\n  ar: 0x0660,\n  fa: 0x06f0,\n  nko: 0x07c0,\n  hi: 0x0966, // devanagari\n  bn: 0x09e6, // bengali\n  pa: 0x0a66, // gurmukhi, punjabi\n  gu: 0x0ae6, // gujarati\n  or: 0x0b66, // oriya\n  ta: 0x0be6, // tamil\n  te: 0x0c66, // telugu\n  kn: 0x0ce6, // kannada\n\n  mal: 0x0d66, // malayalam\n  sinhala_lith: 0x0de6,\n  thai: 0x0e50,\n  lao: 0x0ed0,\n  tibetan: 0x0f20,\n  myanmar: 0x1040,\n  myanmar_shan: 0x1090,\n  khmer: 0x17e0,\n  mongolian: 0x1810,\n  limbu: 0x1946,\n  new_tai_lue: 0x19d0,\n  tai_tham_hora: 0x1a80,\n  tai_tham_tham: 0x1a90,\n  balinese: 0x1b50,\n  sundanese: 0x1bb0,\n  lepcha: 0x1c40,\n  ol_chiki: 0x1c50,\n  vai: 0xa620,\n  saurashtra: 0xa8d0,\n  kayah_li: 0xa900,\n  javanese: 0xa9d0,\n  myanmar_tai_laing: 0xa9f0,\n  cham: 0xaa50,\n  meetei_mayek: 0xabf0,\n  fullwidth: 0xff10,\n  osmanya: 0x104a0,\n  brahmi: 0x11066,\n  sora_sompeng: 0x110f0,\n  chakma: 0x11136,\n  sharada: 0x111d0,\n  khudawadi: 0x112f0,\n  newa: 0x11450,\n  tirhuta: 0x114d0,\n  modi: 0x11650,\n  takri: 0x116c0,\n  ahom: 0x11730,\n  warang_citi: 0x118e0,\n  bhaiksuki: 0x11c50,\n  mro: 0x16a60,\n  pahawh_hmong: 0x16b50,\n  mathematical_bold: 0x1d7ce,\n  'mathematical_double-struck': 0x1d7d8,\n  'mathematical_sans-serif': 0x1d7e2,\n  'mathematical_sans-serif_bold': 0x1d7ec,\n  mathematical_monospace: 0x1d7f6,\n  fula: 0x1e950, // adlam script in fula lang\n} as const;\n\nexport type UnicodeLangKeys = keyof typeof supportedLanguageList;\n\nconst commonLangList: UnicodeLangKeys[] = ['en', 'fa', 'ar'];\n\nexport class UnicodeDigits {\n  protected _toLangZeroCode;\n  protected _searchRegExt;\n\n  protected _replacer(_: string, ...args: number[]): string {\n    return String.fromCharCode(this._toLangZeroCode + args.findIndex((v) => v != null));\n  }\n\n  /**\n   * Translate number.\n   *\n   * Example:\n   *\n   * ```ts\n   * const unicodeDigits = new UnicodeDigits('common', 'en');\n   *\n   * const list = [\n   *   '0123456789',\n   *   '٠١٢٣٤٥٦٧٨٩',\n   *   '߀߁߂߃߄߅߆߇߈߉',\n   *   '०१२३४५६७८९',\n   *   '০১২৩৪৫৬৭৮৯',\n   *   '੦੧੨੩੪੫੬੭੮੯',\n   *   '૦૧૨૩૪૫૬૭૮૯',\n   *   '୦୧୨୩୪୫୬୭୮୯',\n   *   '௦௧௨௩௪௫௬௭௮௯',\n   * ].join('\\n');\n   *\n   * console.log(unicodeDigits.translate(list));\n   * ```\n   */\n  constructor(toLanguage: UnicodeLangKeys, fromLanguages: UnicodeLangKeys[] | 'all' = [...commonLangList]) {\n    if (fromLanguages === 'all') {\n      fromLanguages = Object.keys(supportedLanguageList) as UnicodeLangKeys[];\n    }\n\n    const removeSelf = fromLanguages.indexOf(toLanguage);\n    if (removeSelf !== -1) fromLanguages.splice(removeSelf, 1);\n\n    this._toLangZeroCode = supportedLanguageList[toLanguage];\n\n    const regParts: string[] = [];\n    for (let n = 0; n < 10; n++) {\n      regParts.push(\n        '(' + fromLanguages.map((langKey) => String.fromCharCode(supportedLanguageList[langKey] + n)).join('|') + ')',\n      );\n    }\n    this._searchRegExt = new RegExp(regParts.join('|'), 'g');\n    this._replacer = this._replacer.bind(this);\n  }\n\n  /**\n   * Convert the String of number of the source language to the destination language.\n   *\n   * @param {string} str - String of number of the source language.\n   * @returns String of number of the destination language.\n   *\n   * Example:\n   *\n   * ```ts\n   * const list = [\n   *   '0123456789',\n   *   '٠١٢٣٤٥٦٧٨٩',\n   *   '߀߁߂߃߄߅߆߇߈߉',\n   *   '०१२३४५६७८९',\n   *   '০১২৩৪৫৬৭৮৯',\n   *   '੦੧੨੩੪੫੬੭੮੯',\n   *   '૦૧૨૩૪૫૬૭૮૯',\n   *   '୦୧୨୩୪୫୬୭୮୯',\n   *   '௦௧௨௩௪௫௬௭௮௯',\n   * ].join('\\n');\n   *\n   * console.log(unicodeDigits.translate(list));\n   * ```\n   */\n  translate(str: string): string {\n    return str.trim() === '' ? str : str.replace(this._searchRegExt, this._replacer);\n  }\n}\n"]}