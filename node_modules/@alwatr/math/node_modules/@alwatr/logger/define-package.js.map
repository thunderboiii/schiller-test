{"version":3,"file":"define-package.js","sourceRoot":"","sources":["src/define-package.ts"],"names":[],"mappings":"AAAA,OAAO,aAAa,CAAC;AACrB,OAAO,EAAC,YAAY,EAAC,MAAM,aAAa,CAAC;AAEzC,MAAM,CAAC,QAAQ,KAAf,MAAM,CAAC,QAAQ,GAAK,EAAE,EAAC;AAEvB,MAAM,MAAM,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;AAEtC,UAAU,CAAC,GAAG,EAAE;IACd,IAAI,gBAAgB,IAAI,MAAM,EAAE,CAAC;QAC/B,MAAM,CAAC,QAAQ,EAAE,CAAC,gBAAgB,EAAE,+BAA+B,EAAE,MAAM,CAAC,cAAc,CAAC,CAAC;QAC5F,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;IACnD,CAAC;AACH,CAAC,EAAE,IAAI,CAAC,CAAC;AAET,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,WAAmB,EAAE,OAAe,EAAE,EAAE;IACpE,MAAM,CAAC,aAAa,EAAE,CAAC,gBAAgB,EAAE,EAAC,WAAW,EAAE,OAAO,EAAC,CAAC,CAAC;IAEjE,IAAI,WAAW,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;QACnC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,EAAE,2BAA2B,EAAE;YAC7D,WAAW;YACX,GAAG,EAAE,OAAO;YACZ,GAAG,EAAE,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC;SAClC,CAAC,CAAC;QACH,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;IAC/C,CAAC;IAED,IAAI,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;QAC1C,MAAM,CAAC,QAAQ,CAAC,gBAAgB,EAAE,uCAAuC,EAAE;YACzE,WAAW;SACZ,CAAC,CAAC;QACH,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,OAAO,CAAC;AACzC,CAAC,CAAC;AAEF,aAAa,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC","sourcesContent":["import './global.js';\nimport {createLogger} from './logger.js';\n\nAlwatr.packages ??= {};\n\nconst logger = createLogger('logger');\n\nsetTimeout(() => {\n  if ('registeredList' in Alwatr) {\n    logger.accident?.('define-package', 'duplicate_old_package_defined', Alwatr.registeredList);\n    throw new Error('duplicate_old_package_defined');\n  }\n}, 2000);\n\nexport const definePackage = (packageName: string, version: string) => {\n  logger.logMethodArgs?.('define-package', {packageName, version});\n\n  if (packageName in Alwatr.packages) {\n    logger.accident('define-package', 'duplicate_package_defined', {\n      packageName,\n      new: version,\n      old: Alwatr.packages[packageName],\n    });\n    throw new Error('duplicate_package_defined');\n  }\n\n  if (packageName.indexOf('@alwatr') !== -1) {\n    logger.accident('define-package', 'package_name_starts_with_alwatr_scope', {\n      packageName,\n    });\n    throw new Error('package_name_starts_with_alwatr_scope');\n  }\n\n  Alwatr.packages[packageName] = version;\n};\n\ndefinePackage('logger', '2.x');\n"]}