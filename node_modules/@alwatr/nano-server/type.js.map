{"version":3,"file":"type.js","sourceRoot":"","sources":["src/type.ts"],"names":[],"mappings":"","sourcesContent":["declare module 'http' {\n  interface IncomingHttpHeaders {\n    /**\n     * Alwatr Client UUID\n     */\n    'client-id'?: string;\n\n    'x-forwarded-for'?: string;\n  }\n}\n\nexport interface NanoServerConfig {\n  /**\n   * The port number to listen on.\n   *\n   * @default 80\n   */\n  port: number;\n\n  /**\n   * The hostname to listen on.\n   *\n   * @default '0.0.0.0'\n   */\n  host: string;\n\n  /**\n   * Sets the timeout (ms) for receiving the entire request from the client.\n   *\n   * @default 10_000 ms\n   */\n  requestTimeout: number;\n\n  /**\n   * Sets the timeout (ms) for receiving the complete HTTP headers from the client.\n   *\n   * This should be bigger than `keepAliveTimeout + your server's expected response time`.\n   *\n   * @default 130_000 ms\n   */\n  headersTimeout: number;\n\n  /**\n   * Sets the timeout (ms) for receiving the complete HTTP headers from the client.\n   *\n   * @default 120_000 ms\n   */\n  keepAliveTimeout: number;\n\n  /**\n   * Add /health route.\n   *\n   * @default true\n   */\n  healthRoute: boolean;\n\n  /**\n   * Add OPTIONS route for preflight requests to allow access all origins.\n   *\n   * @default false\n   */\n  allowAllOrigin: boolean;\n\n  /**\n   * API URL prefix pattern.\n   *\n   * @default `api`\n   */\n  prefixPattern: string;\n}\n\nexport interface ConnectionConfig {\n  /**\n   * Add `Access-Control-Allow-Origin: *` header.\n   *\n   * @default false\n   */\n  allowAllOrigin: boolean;\n\n  /**\n   * API URL prefix pattern.\n   *\n   * @default `api`\n   */\n  prefixPattern: string;\n}\n\nexport type ParamKeyType = 'string' | 'number' | 'boolean';\nexport type ParamValueType = string | number | boolean | null;\n"]}