{"version":3,"file":"local-storage.js","sourceRoot":"","sources":["src/local-storage.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAC,MAAM,WAAW,CAAC;AAIpC,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAA0B,IAAY,EAAE,YAAe,EAAK,EAAE;IAC/F,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACzC,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,WAAW;QAAE,OAAO,YAAY,CAAC;IACnE,OAAO,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,YAAY,CAAC;AACzE,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAA0B,IAAY,EAAE,KAAQ,EAAQ,EAAE;IAC3F,IAAI,KAAK,IAAI,IAAI,EAAE,CAAC;QAClB,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IACD,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC","sourcesContent":["import {parseJson} from './json.js';\n\nimport type {Stringifyable} from '@alwatr/type';\n\nexport const getLocalStorageItem = <T extends Stringifyable>(name: string, defaultValue: T): T => {\n  const value = localStorage.getItem(name);\n  if (value === 'null' || value === 'undefined') return defaultValue;\n  return value == null ? defaultValue : parseJson(value) ?? defaultValue;\n};\n\nexport const setLocalStorageItem = <T extends Stringifyable>(name: string, value: T): void => {\n  if (value == null) {\n    localStorage.removeItem(name);\n  }\n  localStorage.setItem(name, JSON.stringify(value));\n};\n"]}