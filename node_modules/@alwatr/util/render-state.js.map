{"version":3,"file":"render-state.js","sourceRoot":"","sources":["src/render-state.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,MAAM,EAAC,MAAM,cAAc,CAAC;AAEpC,MAAM,CAAC,MAAM,WAAW,GAAG,CACzB,KAAQ,EACR,YAA+D,EAC/D,UAAmB,IAAI,EACR,EAAE;IACjB,MAAM,CAAC,aAAa,EAAE,CAAC,aAAa,EAAE,EAAC,KAAK,EAAE,YAAY,EAAC,CAAC,CAAC;IAE7D,IAAI,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;IAEjC,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE,CAAC;QAC/B,MAAM,GAAG,YAAY,CAAC,MAAW,CAAC,CAAC;IACrC,CAAC;IAED,IAAI,MAAM,KAAK,SAAS,EAAE,CAAC;QACzB,IAAI,YAAY,CAAC,QAAQ,KAAK,SAAS,EAAE,CAAC;YACxC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,sBAAsB,CAAC,CAAC;YACpD,OAAO;QACT,CAAC;QACD,OAAO;QACP,IAAI,OAAO,YAAY,CAAC,QAAQ,KAAK,QAAQ,EAAE,CAAC;YAC9C,IAAI,YAAY,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,SAAS,EAAE,CAAC;gBACtD,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,wBAAwB,CAAC,CAAC;gBACtD,OAAO;YACT,CAAC;YACD,OAAO;YACP,OAAO,WAAW,CAAC,YAAY,CAAC,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;QACnE,CAAC;QACD,OAAO;QACP,MAAM,GAAG,YAAY,CAAC,QAAQ,CAAC;IACjC,CAAC;IAED,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE,CAAC;QACjC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,sBAAsB,CAAC,CAAC;QACpD,OAAO;IACT,CAAC;IAED,IAAI,CAAC;QACH,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IACD,OAAO,GAAG,EAAE,CAAC;QACX,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,cAAc,EAAE,GAAG,CAAC,CAAC;QACjD,OAAO;IACT,CAAC;AACH,CAAC,CAAC","sourcesContent":["import {logger} from './_logger.js';\n\nexport const renderState = <R, T extends string>(\n  state: T,\n  renderRecord: Record<T | '_default', undefined | T | (() => R)>,\n  thisArg: unknown = null,\n): R | undefined => {\n  logger.logMethodArgs?.('renderState', {state, renderRecord});\n\n  let render = renderRecord[state];\n\n  if (typeof render === 'string') {\n    render = renderRecord[render as T];\n  }\n\n  if (render === undefined) {\n    if (renderRecord._default === undefined) {\n      logger.error('renderState', 'invalid_render_state');\n      return;\n    }\n    // else\n    if (typeof renderRecord._default === 'string') {\n      if (renderRecord[renderRecord._default] === undefined) {\n        logger.error('renderState', 'invalid_default_render');\n        return;\n      }\n      // else\n      return renderState(renderRecord._default, renderRecord, thisArg);\n    }\n    // else\n    render = renderRecord._default;\n  }\n\n  if (typeof render !== 'function') {\n    logger.error('renderState', 'invalid_render_state');\n    return;\n  }\n\n  try {\n    return render.call(thisArg);\n  }\n  catch (err) {\n    logger.error('renderState', 'render_error', err);\n    return;\n  }\n};\n"]}