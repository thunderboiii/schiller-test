{"version":3,"file":"browser-task.js","sourceRoot":"","sources":["src/browser-task.ts"],"names":[],"mappings":"AAAA,MAAM,EAAC,KAAK,EAAE,KAAK,EAAC,GAAG,IAAI,cAAc,EAAE,CAAC;AAC5C,KAAK,CAAC,KAAK,EAAE,CAAC;AAEd,MAAM,CAAC,MAAM,WAAW,GAAG,GAAkB,EAAE;IAC7C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;QAC7B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAC1B,MAAM,SAAS,GAAG,CAAC,KAAmB,EAAE,EAAE;YACxC,IAAI,KAAK,CAAC,IAAI,KAAK,GAAG,EAAE,CAAC;gBACvB,OAAO;YACT,CAAC;YACD,KAAK,CAAC,mBAAmB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;YAChD,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC;QACF,KAAK,CAAC,gBAAgB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAC7C,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["const {port1, port2} = new MessageChannel();\nport2.start();\n\nexport const browserTask = (): Promise<void> => {\n  return new Promise((resolve) => {\n    const uid = Math.random();\n    const onMessage = (event: MessageEvent) => {\n      if (event.data !== uid) {\n        return;\n      }\n      port2.removeEventListener('message', onMessage);\n      resolve();\n    };\n    port2.addEventListener('message', onMessage);\n    port1.postMessage(uid);\n  });\n};\n"]}